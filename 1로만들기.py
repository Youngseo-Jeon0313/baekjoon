#dp를 생각할 때 최적 부분 구조와 중복되는 부분 문제를 만족하는지 확인한다.
'''
정수 X가 주어진다.
1. X가 5로 나누어떨어지면, 5로 나눈다.
2. X가 3으로 나누어떨어지면, 3으로 나눈다.
3. X가 2로 나누어떨어지면, 2로 나눈다.
4. X에서 1을 뺀다.


'''
x=int(input())

d=[0] * 30001

for i in range(2, x+1):
    d[i] = d[i-1] + 1  #이 밑에 껏중에 아예 안떨어지는 거 예방
    if i%2 == 0:
        d[i] =min(d[i], d[i//2] +1) 
    if i%3 == 0:  #배열의 번째 수가 3으로 나누어떨어지면
        d[i] = min(d[i], d[i//3] +1) #고르자 그 수랑 3으로 나눈 몫 +1
    if i%5 == 0:
        d[i] = min(d[i], d[i//5] +1)

print(d[x])
#점화식 상으로 생각해봤을 때 최적이 어떻느냐를 나타낸거다.
#앞에서부터 차근차근 뒤로 온다고 생각해야 함
'''
d배열
0 1 2 2 3 ..
'''