'''
확장 유클리드 호제법은 두 정수 a와 b의 최대공약수(Greatest Common Divisor, GCD)를 구하는 알고리즘 중 하나입니다.

기본적인 유클리드 호제법과 달리, 확장 유클리드 호제법은 최대공약수뿐만 아니라 a와 b를 사용하여 선형 조합을 만들어내는 방법도 제공합니다. 이 선형 조합은 a와 b의 최대공약수가 1인 경우에는 특히 유용합니다.

확장 유클리드 호제법은 다음과 같은 방식으로 작동합니다:

a를 b로 나눕니다. a를 b로 나눈 나머지를 r이라고 합니다.

r이 0이면, b가 a와 b의 최대공약수이므로 b를 반환합니다.

r이 0이 아니면, b를 r로 대체하고 a를 b로 대체한 후, 1번부터 다시 시작합니다.

이 과정을 반복하면, r이 0이 되는 순간의 b값이 a와 b의 최대공약수가 됩니다.

확장 유클리드 호제법은 위의 과정을 반복하면서 a와 b를 사용하여 선형 조합을 만들어내는 방법도 제공합니다. 이를 수식으로 표현하면 다음과 같습니다:

ax + by = gcd(a, b)

여기서 x와 y는 a와 b의 선형 조합을 나타내는 계수입니다. 이 방정식은 재귀적으로 해결됩니다. r이 0이 아니라면, 다음과 같이 계산됩니다:

gcd(a, b) = gcd(b, r) = bx' + (a - ⌊a/b⌋b)y'

여기서 x'와 y'는 이전 단계에서 계산된 x와 y를 사용하여 계산됩니다.

이렇게 계속해서 반복하면, r이 0이 될 때의 x와 y가 a와 b의 최대공약수를 만족하는 선형 조합을 나타냅니다.

'''